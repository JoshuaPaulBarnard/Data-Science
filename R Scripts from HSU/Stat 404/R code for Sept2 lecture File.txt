# R code for Sept 2 Multivariate lecture

x <- c(1,7,3,5); y<- c(3,8,2,7)
plot(x,y)

# Make new graph that include origin of graph
plot( c(0,max(x,y)),c(0,max(x,y)), type="n", xlab="x",ylab="y")
# type="n" made the points invisible (no plotting)
# max(x,y) ensures I included largest values of x and y. 
# max(x,y) used for both x and y vectors to keep same axis scale
# xlab="x" avoided c(0,max(x)) as label for x-axis

points(x,y) 
# points() lays points on an already existing graph.  
# It doesn't create new graph.

abline(v=mean(x),h=mean(y),lty=2)
# abline() allows multiple ways to put line on graph. See help(abline)
# lty=2 specifies dashed line type.  See lty in help(par)

mean(x)
var(x) # variance
sd(x) # standard deviation 
cov(x,y) # covariance
cor(x,y) # correlation

		 
bumpus <- read.table(file=
           "http://users.humboldt.edu/rizzardi/Data.dir/BumpusManly.txt",
		   header=T, skip=10)
names(bumpus) # variable names
str(bumpus)   # variable names and info about data
head(bumpus,10) # first 10 rows of data
pairs(bumpus) # matrix plot of data
cov(bumpus) # variance-covariance matrix
cor(bumpus) # correlation matrix

X <- as.matrix( cbind( 1, bumpus[c(1,3,4,5)] ) )
# as.matrix() turns argument into a matrix

y <-  as.matrix( bumpus[2] )

beta <- solve( t(X)%*%X ) %*% t(X) %*% y
beta

fit1 <- lm( ae ~ tl + bh + hl + ks, data=bumpus ) # linear model function
fit1
predict(fit1)[1:15] # first 15 values of y-hat
( X %*% beta )[1:15]





